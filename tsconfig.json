{
      "compilerOptions": {
        "target": "es2017",            /* Define a versão do JavaScript para o código emitido e inclui declarações de bibliotecas compatíveis. 'es2017' é uma boa escolha moderna. */
        "module": "esnext",             /* Especifica qual código de módulo é gerado. 'esnext' permite recursos de módulo modernos. */
        "jsx": "react",                 /* Habilita o suporte a JSX em arquivos .tsx. */
        "esModuleInterop": true,        /* Emite JavaScript adicional para facilitar a importação de módulos CommonJS. Isso habilita 'allowSyntheticDefaultImports' para compatibilidade de tipos. */
        "moduleResolution": "node",     /* Especifica como o TypeScript procura arquivos de módulos. 'node' é o padrão. */
        "strict": true,                 /* Habilita todas as opções de verificação de tipo estrita. */
        "skipLibCheck": true,           /* Pula a verificação de tipo de arquivos de declaração (.d.ts). */
        "forceConsistentCasingInFileNames": true, /* Garante que o casing (maiúsculas/minúsculas) esteja correto nas importações. */
        "outDir": "./",                 /* Redireciona a estrutura de saída para o diretório. Como queremos o index.js ao lado do index.tsx, isso é adequado. */
        "rootDir": "./"                 /* Especifica a pasta raiz dos seus arquivos de origem. */
      },
      "include": [
        "index.tsx"                     /* Especifica os arquivos a serem incluídos na compilação */
      ],
      "exclude": [
        "node_modules"                  /* Exclui node_modules da compilação */
      ]
    }
    